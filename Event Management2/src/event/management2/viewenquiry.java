/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package event.management2;

import java.awt.Color;
import java.awt.Toolkit;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CS
 */
public class viewenquiry extends javax.swing.JInternalFrame {

    /**
     * Creates new form viewbooking
     */
    public viewenquiry() {
        initComponents();
           Toolkit yk= Toolkit.getDefaultToolkit();
         int x=(int) yk.getScreenSize().getWidth();
         int y=(int) yk.getScreenSize().getHeight();
         this.setSize(x,y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("View Booking");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        jTable1.setBackground(new java.awt.Color(204, 204, 204));
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enquiryno.", "Name", "Phone", "EmailId", "Address", "Gender", "Event Name", "Date"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 60, 1340, 520);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 51, 0));
        jLabel1.setText("Enquiryno");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 20, 80, 30);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 51, 0));
        jButton1.setText("Search");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(240, 20, 90, 30);

        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(102, 51, 0));
        getContentPane().add(jTextField2);
        jTextField2.setBounds(110, 20, 120, 30);
        getContentPane().add(jDateChooser1);
        jDateChooser1.setBounds(480, 20, 150, 30);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(640, 20, 100, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Date");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(410, 20, 60, 30);

        setBounds(0, 0, 1365, 627);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
fetchmembers();        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameActivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    
    try
    {
        String url="jdbc:mysql://localhost/eventdb";
        Connection myconn=DriverManager.getConnection(url, "root", "");
        try
        {
               DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
               model1.setRowCount(0);
            String q="select * from enquiry where enno=?";
            PreparedStatement state=myconn.prepareStatement(q);
            state.setString(1,jTextField2.getText());
            ResultSet res=state.executeQuery();
           while(res.next())
           {
               String mid=res.getString("enno");
               String bid=res.getString("name");
               String type=res.getString("phone");
               String place=res.getString("email");
               String g=res.getString("address");
               String eq=res.getString("gender");
               String eq2=res.getString("event");
               Date date=res.getDate("date");
               DefaultTableModel mymodel=(DefaultTableModel)jTable1.getModel();
               Object myrow[]={mid,bid,type,place,g,eq,eq2,date};
               mymodel.addRow(myrow);
               jTextField2.setText("");
              
           }
            if(jTable1.getRowCount()==0)
               {
                   jTextField2.setText("");
                   JOptionPane.showMessageDialog(rootPane,"no memebers found");
               }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "error in query"+e.getMessage());
        }
    }
    catch(SQLException e)
    {
       JOptionPane.showMessageDialog(rootPane, "error in connection"+e.getMessage());
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        jButton1.setBackground(Color.LIGHT_GRAY);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        jButton1.setBackground(Color.GRAY);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
          
    try
    {
        String url="jdbc:mysql://localhost/eventdb";
        Connection myconn=DriverManager.getConnection(url, "root", "");
        try
        {
               DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
model1.setRowCount(0);
            String q="select * from enquiry where date=?";
            
            PreparedStatement state=myconn.prepareStatement(q);
       SimpleDateFormat mydate=new SimpleDateFormat("yyyy-MM-dd");
    String ob=mydate.format(jDateChooser1.getDate());
           state.setString(1,ob);
            ResultSet res=state.executeQuery();
           while(res.next())
           {
               String mid=res.getString("enno");
               String bid=res.getString("name");
               String type=res.getString("phone");
               String place=res.getString("email");
               String g=res.getString("address");
               
               String eq=res.getString("gender");
               String eq2=res.getString("event");
               Date date=res.getDate("date");
               DefaultTableModel mymodel=(DefaultTableModel)jTable1.getModel();
               Object myrow[]={mid,bid,type,place,g,eq,eq2,date};
               mymodel.addRow(myrow);
              jDateChooser1.setDate(null);
           }
            if(jTable1.getRowCount()==0)
               {
                   JOptionPane.showMessageDialog(rootPane,"no memebers found");
                                  jDateChooser1.setDate(null);

               }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "error in query"+e.getMessage());
        }
    }
    catch(SQLException e)
    {
       JOptionPane.showMessageDialog(rootPane, "error in connection"+e.getMessage());
    }  // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
void fetchmembers()
{
    
    try
    {
        String url="jdbc:mysql://localhost/eventdb";
        Connection myconn=DriverManager.getConnection(url, "root", "");
        try
        {
            String q="select * from enquiry";
            
            PreparedStatement state=myconn.prepareStatement(q);
       
            ResultSet res=state.executeQuery();
           while(res.next())
           {
               String mid=res.getString("enno");
               String bid=res.getString("name");
               String type=res.getString("phone");
               String place=res.getString("email");
               String g=res.getString("address");
               
               String eq=res.getString("gender");
               String eq2=res.getString("event");
               Date date=res.getDate("date");
               DefaultTableModel mymodel=(DefaultTableModel)jTable1.getModel();
               Object myrow[]={mid,bid,type,place,g,eq,eq2,date};
               mymodel.addRow(myrow);
              
           }
            if(jTable1.getRowCount()==0)
               {
                   JOptionPane.showMessageDialog(rootPane,"no memebers found");
               }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "error in query"+e.getMessage());
        }
    }
    catch(SQLException e)
    {
       JOptionPane.showMessageDialog(rootPane, "error in connection"+e.getMessage());
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
