/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package event.management2;

import java.awt.Color;
import java.awt.Toolkit;
import java.sql.Connection;
import java.util.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author CS
 */
public class booking1 extends javax.swing.JInternalFrame {
  public  String bookingid;
  public int d,w=0,l=0;
//public String bookingid;
    /**
     * Creates new form booking
     */
    public booking1() {
        initComponents();
           Toolkit yk= Toolkit.getDefaultToolkit();
         int x=(int) yk.getScreenSize().getWidth();
         int y=(int) yk.getScreenSize().getHeight();
      jLabel6.setSize(x,y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton5 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setBackground(javax.swing.UIManager.getDefaults().getColor("Button.highlight"));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Booking Events");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setText("FOR BOOKING");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(380, 60, 226, 33);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 0));
        jLabel2.setText("MemberID");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(280, 110, 128, 34);

        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(102, 0, 0));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(500, 110, 150, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 0, 0));
        jLabel3.setText("BookingID");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(280, 160, 128, 34);

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(102, 0, 0));
        getContentPane().add(jTextField2);
        jTextField2.setBounds(500, 160, 150, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 0, 0));
        jLabel4.setText("Event Type");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(280, 210, 128, 50);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(102, 0, 0));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "choose" }));
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(500, 220, 160, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 0, 0));
        jLabel5.setText("Event Place");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(280, 320, 128, 50);

        jComboBox2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox2.setForeground(new java.awt.Color(102, 0, 0));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "choose" }));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox2);
        jComboBox2.setBounds(500, 330, 160, 30);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 0, 0));
        jLabel8.setText("Guests");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(280, 270, 128, 50);

        jTextField3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(102, 0, 0));
        jTextField3.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextField3InputMethodTextChanged(evt);
            }
        });
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField3);
        jTextField3.setBounds(500, 280, 150, 30);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 0, 0));
        jLabel9.setText("Date");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(280, 390, 130, 50);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 0, 0));
        jButton1.setText("Next");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(570, 460, 100, 30);

        jDateChooser1.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser1.setForeground(new java.awt.Color(102, 0, 0));
        getContentPane().add(jDateChooser1);
        jDateChooser1.setBounds(500, 390, 150, 30);

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(102, 0, 0));
        jButton5.setText("Next");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton5MouseExited(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(570, 460, 100, 30);

        jLabel6.setIcon(new javax.swing.ImageIcon("C:\\Users\\CS\\Desktop\\download (1).png")); // NOI18N
        getContentPane().add(jLabel6);
        jLabel6.setBounds(0, 0, 34, 14);

        setBounds(0, 0, 1028, 615);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed


    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated

     fetch();
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameActivated
void fetch()
{ 
   jButton5.setVisible(false);
   //jButton3.setVisible(false);
//   jButton2.setVisible(false);
   jButton1.setVisible(false);
        String url="jdbc:mysql://localhost/eventdb";
try
{
    Connection myconn =DriverManager.getConnection(url, "root", "");
try
{
if(d==2)
{    
             
             jButton5.setVisible(true);
          //   jButton2.setVisible(true);
         //    jButton3.setVisible(true);
             String q="select * from booking where bookingid=?";
             PreparedStatement state=myconn.prepareStatement(q);
             state.setString(1, bookingid);
             ResultSet res=state.executeQuery();
    
    String q1="select * from addvenues";
    PreparedStatement state2=myconn.prepareStatement(q1);
    ResultSet res2=state2.executeQuery();
 
 
    
while(res2.next())
{
     jComboBox2.addItem(res2.getString("name"));
}
if(jComboBox2.getItemCount()==1)
{
    jComboBox2.removeAllItems();
    jComboBox2.addItem("no venue");
}
    String q2="select * from addevent";
    PreparedStatement state3=myconn.prepareStatement(q2);
    ResultSet res3=state3.executeQuery();
while(res3.next())
{
    jComboBox1.addItem(res3.getString("name"));
}
if(jComboBox1.getItemCount()==1)
{
    jComboBox1.removeAllItems();
    jComboBox1.addItem("no event");
}
   
if(res.next())
             {
                 jTextField1.setText(res.getString("memberid"));     
                 jTextField2.setText(bookingid);
                 jTextField3.setText(res.getString("guests"));
                 jDateChooser1.setDate(res.getDate("date"));
                 jComboBox1.setSelectedItem(res.getString("type")); 
                 jComboBox2.setSelectedItem(res.getString("place"));   
             }
             else
             {
                 JOptionPane.showMessageDialog(rootPane, "Invalid Booking Id"); 
             }          
}
else
{
           jButton1.setVisible(true);
           String q="select * from booking order by bookingid desc";
    String q1="select * from addvenues";
    PreparedStatement state=myconn.prepareStatement(q);
    PreparedStatement state2=myconn.prepareStatement(q1);

    ResultSet res=state.executeQuery();
    ResultSet res2=state2.executeQuery();
    
if(res.next())
{
    int b=res.getInt("bookingid");
    jTextField2.setText(String.valueOf(b+1));
}
else
{
    jTextField2.setText(String.valueOf("1"));
}
while(res2.next())
{
    jComboBox2.addItem(res2.getString("name"));
}
if(jComboBox2.getItemCount()==1)
{
    jComboBox2.removeAllItems();
    jComboBox2.addItem("no venue");
}

    String q2="select * from addevent";
    PreparedStatement state3=myconn.prepareStatement(q2);
    ResultSet res3=state3.executeQuery();
while(res3.next())
{
    jComboBox1.addItem(res3.getString("name"));
}
if(jComboBox1.getItemCount()==1)
{
    jComboBox1.removeAllItems();
    jComboBox1.addItem("no event");
}
   
}
}
                 catch(Exception e)
                    {
              JOptionPane.showMessageDialog(rootPane, "Error in Query"+e.getMessage());
                    } 
}
catch(SQLException e)
{
   JOptionPane.showMessageDialog(rootPane, "Error in connection"+e.getMessage());  
}
}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
if(jComboBox1.getSelectedIndex()==0||jComboBox2.getSelectedIndex()==0)
{
    if(jComboBox1.getSelectedIndex()==0)
    JOptionPane.showMessageDialog(rootPane,"First Add Event");
    else
    JOptionPane.showMessageDialog(rootPane,"First Add Venues");
}

else
{
    String url="jdbc:mysql://localhost/eventdb";
try
{
    Connection myconn =DriverManager.getConnection(url, "root", "");

try
{
   Date f=jDateChooser1.getDate();
   Date cur=new Date();
     if(jComboBox1.getSelectedIndex()==0 || jComboBox2.getSelectedIndex()==0  || (f.compareTo(cur)<0) || jDateChooser1.getDate()==(null)||jTextField2.getText().equalsIgnoreCase("") ||jTextField1.getText().equalsIgnoreCase("")||jTextField3.getText().equalsIgnoreCase(""))
    {
        if(jDateChooser1.getDate()==null)
        {
JOptionPane.showMessageDialog(rootPane, "Choose Date");
        }
        else if((f.compareTo(cur)<0)) 
    {
JOptionPane.showMessageDialog(rootPane, "Date is wrong");
    }
          else
          {
        JOptionPane.showMessageDialog(rootPane, "please fill full info....");
          }
    }
   
      else
      {
             String o="select * from addmember where memberid=?";
             PreparedStatement state1=myconn.prepareStatement(o);
             state1.setString(1, jTextField1.getText());
             ResultSet res1=state1.executeQuery();

             if(res1.next())
             {
                 
    String q="insert into booking values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
    PreparedStatement state=myconn.prepareStatement(q); 
    state.setString(1, jTextField1.getText());
    state.setString(2, jTextField2.getText());
    state.setString(3, jComboBox1.getSelectedItem().toString());
    state.setString(4, jComboBox2.getSelectedItem().toString());
    state.setString(5, jTextField3.getText()); 
    SimpleDateFormat mydate=new SimpleDateFormat("yyyy-MM-dd");
    String ob=mydate.format(jDateChooser1.getDate());
    state.setString(6, ob); 
    state.setString(7, "");
    state.setString(8, "");
    state.setString(9, "");
    state.setString(10, "");
    state.setString(11, "");
    state.setString(12, "");
    state.setString(13, "");
    state.setString(14, "");
    state.setString(15,String.valueOf(0));
    state.setString(16,String.valueOf(0));
    

    Date c=new Date();
    SimpleDateFormat mydate4=new SimpleDateFormat("yyyy-MM-dd");
    String ob4=mydate4.format(c);
    state.setString(17, "");
    state.setString(18, "");
    state.setString(19, "");
    state.setString(20, "");
    state.setString(21, ob4);
    state.setString(22, String.valueOf(0));
    state.setString(23, "");
    state.setString(24, String.valueOf(0));    state.setString(25, String.valueOf(0));
    String s="select cost from addvenues where name=?";
    PreparedStatement state4=myconn.prepareStatement(s);
    state4.setString(1,jComboBox2.getSelectedItem().toString());
    ResultSet res4=state4.executeQuery(); 

    if(res4.next())
    {
         String g=res4.getString("cost");
         state.setString(17, g);
    }
    else
    {
         state.setString(17, "");
         JOptionPane.showMessageDialog(rootPane, "Error in Fetching cost you dont add cost of this venue first please add the cost of venue");   
    }


    String r="select place from booking where date=?";
    PreparedStatement state2=myconn.prepareStatement(r);
    SimpleDateFormat mydate2=new SimpleDateFormat("yyyy-MM-dd");
    String ob2=mydate2.format(jDateChooser1.getDate());
    state2.setString(1, ob2); 
    ResultSet res2=state2.executeQuery();
    String st1="";
    while(res2.next())
    {
       st1=st1+res2.getString("place"); 
    } 
    ResultSet res7=state2.executeQuery();
  if(res7.next())
  {
     // String j=res2.getString("place");
      String j2=jComboBox2.getSelectedItem().toString();
     // System.out.println(j);
      System.out.println(j2);
      if(!st1.toLowerCase().contains(j2.toLowerCase()))
      {
    int res10=state.executeUpdate();
    
    if(res10>0)
    {
          JOptionPane.showMessageDialog(rootPane, "Booking Added Succesfully");
          bookingeq obj = new bookingeq();
          obj.bookingid=jTextField2.getText();
          mainform.jDesktopPane2.add(obj);
          obj.setVisible(true);
          this.dispose();
    }
    else
    {
           JOptionPane.showMessageDialog(rootPane, "Booking NOT Added Succesfully");
    }
      }
      else
      {
      JOptionPane.showMessageDialog(rootPane, "**********Venue is not available at that date therefore change date or venue thanku********");  
      }
  }
  else
  {
         int res11=state.executeUpdate();
    if(res11>0)
    {
        
          JOptionPane.showMessageDialog(rootPane, "Booking Added Succesfully");
          bookingeq obj = new bookingeq();
          obj.bookingid=jTextField2.getText();
          mainform.jDesktopPane2.add(obj);
          obj.setVisible(true);
          this.dispose();
    }
    else
    { 
           JOptionPane.showMessageDialog(rootPane, "Booking NOT Added Succesfully");
    }
  }

           }
             else
             {
       JOptionPane.showMessageDialog(rootPane, "Member id is not available please add memberid first"); 
             }

}
}
catch(Exception e)
{
      JOptionPane.showMessageDialog(rootPane, "error in query double entry of same bookingid"+e.getMessage()); 
}
finally
    {
      myconn.close();      
    }
}
catch(SQLException e)
{
    JOptionPane.showMessageDialog(rootPane, "error in connection"+e.getMessage());
}
}     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
  
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
 jButton1.setBackground(Color.GRAY);       // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
jButton1.setBackground(Color.LIGHT_GRAY);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5MouseEntered

    private void jButton5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5MouseExited

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
if(jComboBox1.getSelectedIndex()==0||jComboBox2.getSelectedIndex()==0)
{
    if(jComboBox1.getSelectedIndex()==0)
    JOptionPane.showMessageDialog(rootPane,"First Add Event");
    else
    JOptionPane.showMessageDialog(rootPane,"First Add Venues");
}
else
{
        
        String url="jdbc:mysql://localhost/eventdb";
try
{
    Connection myconn =DriverManager.getConnection(url, "root", "");
try
{
 Date f=jDateChooser1.getDate();
   Date cur=new Date();
     if(jComboBox1.getSelectedIndex()==0 || jComboBox2.getSelectedIndex()==0  || (f.compareTo(cur)<0) || jDateChooser1.getDate()==(null)|| jTextField2.getText().equalsIgnoreCase("") ||jTextField1.getText().equalsIgnoreCase("")||jTextField3.getText().equalsIgnoreCase(""))
    {
        if(jDateChooser1.getDate()==null)
        {
JOptionPane.showMessageDialog(rootPane, "Choose Date");
        }
        else if((f.compareTo(cur)<0)) 
    {
JOptionPane.showMessageDialog(rootPane, "Date is wrong");
    }
        else
        {
            
JOptionPane.showMessageDialog(rootPane, "Please fill full info..");
        }
    }
        else
       {
           String o="select * from addmember where memberid=?";
             PreparedStatement state1=myconn.prepareStatement(o);
             state1.setString(1, jTextField1.getText());
             ResultSet res1=state1.executeQuery();

             if(res1.next())
             {
    String q="update booking set memberid=?,type=?,place=?,guests=?,date=? where bookingid=?";
    PreparedStatement state=myconn.prepareStatement(q);
    state.setString(1, jTextField1.getText());   
    state.setString(2, jComboBox1.getSelectedItem().toString());
    state.setString(3, jComboBox2.getSelectedItem().toString());
    state.setString(4, jTextField3.getText()); 
    
    SimpleDateFormat mydate=new SimpleDateFormat("yyyy-MM-dd");
    String ob=mydate.format(jDateChooser1.getDate());
    state.setString(5, ob); 
    state.setString(6, jTextField2.getText()); 
   
    String r2="select date from booking where date =?";
    PreparedStatement state3=myconn.prepareStatement(r2);
    SimpleDateFormat mydate7=new SimpleDateFormat("yyyy-MM-dd");
    String ob7=mydate7.format(jDateChooser1.getDate());
    state3.setString(1, ob7); 
    ResultSet res3=state3.executeQuery();
    String h;
    if(res3.next())
    { 
        
    String p=jComboBox2.getSelectedItem().toString();
   int k=Integer.parseInt(jTextField2.getText());
   String st1="";
   String r3="select * from booking where date=?";
   PreparedStatement state9=myconn.prepareStatement(r3);
   state9.setString(1,ob7);
   ResultSet res8=state9.executeQuery();
   while(res8.next())
   {
     if(k!=res8.getInt("bookingid"))
     {
        st1=st1+res8.getString("place");
     }
   } 
   if(st1.toLowerCase().contains(p))
   {  
     JOptionPane.showMessageDialog(rootPane, "**Please Change Venue OR Date**");  
   }
   else
   {
int res=state.executeUpdate();
if(res>0)
{
       JOptionPane.showMessageDialog(rootPane, "Booking updated Succesfully");
         bookingeq obj = new bookingeq();
          obj.bookingid=jTextField2.getText();
          mainform.jDesktopPane2.add(obj);
          obj.setVisible(true);
          this.dispose();  
}
else
{
    JOptionPane.showMessageDialog(rootPane, "Booking not updated Succesfully");
}
   }
    }
    
    
    else
    {
       int res=state.executeUpdate();
   if(res>0)
    { 
      JOptionPane.showMessageDialog(rootPane, "Booking Updated Succesfully");
         bookingeq obj = new bookingeq();
          obj.bookingid=jTextField2.getText();
          mainform.jDesktopPane2.add(obj);
          obj.setVisible(true);
          this.dispose();
    }
      else
   {
       JOptionPane.showMessageDialog(rootPane, "booking not updated successfully");
   }   
    }
      
             }
             else
             {
                  JOptionPane.showMessageDialog(rootPane, "Member id is not available");
             }
       }
}
catch(Exception e)
{
      JOptionPane.showMessageDialog(rootPane, "error in query"+e.getMessage()); 
}
finally
    {
      myconn.close();      
    }
}
catch(SQLException e)
{
    JOptionPane.showMessageDialog(rootPane, "error in connection"+e.getMessage());
}
}
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
             
     
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField3InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextField3InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3InputMethodTextChanged

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ItemStateChanged
                              


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
